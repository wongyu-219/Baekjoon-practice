import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.math.BigInteger;

class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int L = Integer.parseInt(br.readLine());
        String str = br.readLine();
        final int M = 1234567891;
        BigInteger r = BigInteger.valueOf(31);

        BigInteger hashValue = BigInteger.ZERO; // 0으로 초기화

        for (int i = 0; i < str.length(); i++) {
            BigInteger charValue = BigInteger.valueOf(str.charAt(i) - 'a' + 1);
            BigInteger power = r.modPow(BigInteger.valueOf(i), BigInteger.valueOf(M));

            hashValue = hashValue.multiply(r).add(charValue).remainder(BigInteger.valueOf(M)); // 메서드 계산할 때 하나의 신규 객체가 생성되는 것
          //BigInteger 객체를 생성하고, 그 결과를 변수 hashValue에 할당함.  불변 객체의 특성을 활용한 방식
        }

        System.out.println(hashValue);
    }
}
